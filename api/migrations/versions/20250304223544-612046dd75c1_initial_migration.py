"""initial migration

Revision ID: 612046dd75c1
Revises:
Create Date: 2025-03-04 22:35:44.237572

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '612046dd75c1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assessment',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('min_value', sa.Float(), nullable=False),
                    sa.Column('max_value', sa.Float(), nullable=False),
                    sa.Column('scoring_method', sa.Enum('BOOLEAN', 'SCORED',
                                                        'CUSTOM', name='scoringmethod'), nullable=False),
                    sa.Column('created_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_assessment_id'),
                    'assessment', ['id'], unique=False)
    op.create_table('tokenblacklist',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('token', sa.String(), nullable=False),
                    sa.Column('blacklisted_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('expires_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_tokenblacklist_token'),
                    'tokenblacklist', ['token'], unique=False)
    op.create_table('user',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('password_hash', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('deleted_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('account',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('first_name', sa.String(), nullable=False),
                    sa.Column('last_name', sa.String(), nullable=False),
                    sa.Column('role', sa.Enum('ASSESSMENT_DEVELOPER',
                                              'ASSESSMENT_REVIEWER', 'ADMIN', name='userrole'), nullable=False),
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('created_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_account_id'), 'account', ['id'], unique=True)
    op.create_index(op.f('ix_account_user_id'),
                    'account', ['user_id'], unique=True)
    op.create_table('question',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('text', sa.String(), nullable=False),
                    sa.Column('order', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('assessment_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['assessment_id'], ['assessment.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_question_id'), 'question', ['id'], unique=False)
    op.create_table('choice',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('text', sa.String(), nullable=False),
                    sa.Column('value', sa.Float(), nullable=False),
                    sa.Column('order', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('question_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['question_id'], ['question.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_choice_id'), 'choice', ['id'], unique=False)
    op.create_table('examinee',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('first_name', sa.String(), nullable=False),
                    sa.Column('middle_name', sa.String(), nullable=True),
                    sa.Column('last_name', sa.String(), nullable=False),
                    sa.Column('birth_date', sa.Date(), nullable=False),
                    sa.Column('gender', sa.Enum('FEMALE', 'MALE',
                                                'OTHER', name='gender'), nullable=False),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('internal_identifier',
                              sa.String(), nullable=True),
                    sa.Column('comments', sa.Text(), nullable=True),
                    sa.Column('created_by', sa.Uuid(), nullable=False),
                    sa.Column('created_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('deleted_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['created_by'], ['account.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )
    op.create_index(op.f('ix_examinee_id'), 'examinee', ['id'], unique=True)
    op.create_table('assessmentresponse',
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'ABANDONED',
                              'DISCARDED', name='responsestatus'), nullable=False),
                    sa.Column('score', sa.Float(), nullable=True),
                    sa.Column('created_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('assessment_id', sa.Integer(), nullable=False),
                    sa.Column('examinee_id', sa.Uuid(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['assessment_id'], ['assessment.id'], ),
                    sa.ForeignKeyConstraint(
                        ['examinee_id'], ['examinee.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_assessmentresponse_examinee_id'),
                    'assessmentresponse', ['examinee_id'], unique=False)
    op.create_index(op.f('ix_assessmentresponse_id'),
                    'assessmentresponse', ['id'], unique=True)
    op.create_table('questionresponse',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('numeric_value', sa.Float(), nullable=True),
                    sa.Column('text_value', sa.Text(), nullable=True),
                    sa.Column('created_at', sa.DateTime(
                        timezone=True), nullable=False),
                    sa.Column('question_id', sa.Integer(), nullable=False),
                    sa.Column('selected_choice_id',
                              sa.Integer(), nullable=True),
                    sa.Column('assessment_response_id',
                              sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['assessment_response_id'], [
                        'assessmentresponse.id'], ),
                    sa.ForeignKeyConstraint(
                        ['question_id'], ['question.id'], ),
                    sa.ForeignKeyConstraint(
                        ['selected_choice_id'], ['choice.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('questionresponse')
    op.drop_index(op.f('ix_assessmentresponse_id'),
                  table_name='assessmentresponse')
    op.drop_index(op.f('ix_assessmentresponse_examinee_id'),
                  table_name='assessmentresponse')
    op.drop_table('assessmentresponse')
    op.drop_index(op.f('ix_examinee_id'), table_name='examinee')
    op.drop_table('examinee')
    op.drop_index(op.f('ix_choice_id'), table_name='choice')
    op.drop_table('choice')
    op.drop_index(op.f('ix_question_id'), table_name='question')
    op.drop_table('question')
    op.drop_index(op.f('ix_account_user_id'), table_name='account')
    op.drop_index(op.f('ix_account_id'), table_name='account')
    op.drop_table('account')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_tokenblacklist_token'), table_name='tokenblacklist')
    op.drop_table('tokenblacklist')
    op.drop_index(op.f('ix_assessment_id'), table_name='assessment')
    op.drop_table('assessment')
    # ### end Alembic commands ###
