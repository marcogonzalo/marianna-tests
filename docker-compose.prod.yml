services:
  api:
    image: marianna-tests-api:prod
    build:
      context: ./api
      target: api-prod
      args:
        - BUILD_ENV=production
    ports:
      - "8000:8000"
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    env_file:
      - stack.env
    depends_on:
      db:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    logging:
      options:
        max-size: "20m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default

  client:
    image: marianna-tests-client:prod
    build:
      context: ./client
      target: client-prod
      args:
        - NODE_ENV=production
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://api:8000
    env_file:
      - stack.env
    depends_on:
      - api
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default

  db:
    image: postgres:15-alpine
    ports:
      - "5435:5432"
    env_file:
      - stack.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    logging:
      options:
        max-size: "20m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "assessments"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  postgres_data:
    driver: local
